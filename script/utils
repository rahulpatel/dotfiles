#!/usr/bin/env bash

find_files () {
  find -H $DOTFILES_ROOT -maxdepth 2 -name "$1" -not -path '*script/*'
}

link_file () {
  local src=$1
  local dst=$2
  local skip=false
  local overwrite=false
  local backup=false

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]; then
    [[ "$(readlink $dst)" == "$dst" ]] && skip=true

    if [ "$skip" != "true" ]; then
      user "> $dst already exists, what would you like to do?\n\
           [s]kip\n\
           [o]verwrite\n\
           [b]ackup"
      read -p '           ' -e action

      case "$action" in
        s)
          skip=true;;
        o)
          overwrite=true;;
        b)
          backup=true;;
        *)
          ;;
      esac
    fi
  fi

  if [ "$skip" == "true" ]; then
    success "> skipped $src"
    return
  fi

  if [ "$overwrite" == "true" ]; then
    info "> rm -r $dst"
    rm -r "$dst"
  fi

  if [ "$backup" == "true" ]; then
    info "> mv $dst ${dst}.backup"
    mv "$dst" "${dst}.backup"
  fi

  info "> ln -s $src $dst"
  if ln -s "$src" "$dst"; then
    success "> linked $src to $dst"
  else
    fail "> failed to link $src to $dst"
  fi
}

indent () {
  sed 's/^/           /'
}

info () {
  printf "\r  [ \e[1;34m..\e[0m ] \e[1;34m$1\e[0m\n"
}

user () {
  printf "\r  [ \e[1;33m??\e[0m ] \e[1;33m$1\e[0m\n"
}

success () {
  printf "\r\e[2K  [ \e[1;32mOK\e[0m ] \e[1;32m$1\e[0m\n"
}

fail () {
  printf "\r\e[2K  [\e[1;31mFAIL\e[0m] \e[1;31m$1\e[0m\n"
  exit
}
